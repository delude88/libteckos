name: Ubuntu

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows Latest MSVC 2019",
            os: windows-latest,
            build_type: "Release",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
          - {
            name: "Ubuntu Latest",
            os: ubuntu-latest,
            build_type: "Release"
          }
          - {
            name: "macOS Latest Clang",
            os: macos-latest,
            build_type: "Release"
          }

    steps:
      - uses: actions/checkout@v2
      #- name: fetchtags
      #  run: git fetch --unshallow --tags
      - name: Checkout Submodules
        run: git submodule update --init --recursive
      - name: Install dependencies using conan (windows only)
        if: ${{ matrix.config.os != 'windows-latest' }}
        run: |
          pip3 install wheel setuptools
          pip3 install conan
          conan --version
          conan install -if build --build=missing .
      - name: Install dependencies using apt (linux)
        if: ${{ matrix.config.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get install libssl-dev libdeflate-dev
      - name: Install dependencies using brew (macos)
        if: ${{ matrix.config.os == 'macos-latest' }}
        run: |
          brew install libdeflate openssl
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}
      - name: Build with CMake
        run: cmake --build build --config ${{ matrix.config.build_type }}